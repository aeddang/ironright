{
  "{\"sourceRoot\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"filename\":\"/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"ie\":\"11.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}},{\"key\":\"regenerator-usage\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"ie\":\"11.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "ie": "11.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        },
        {
          "key": "regenerator-usage",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "ie": "11.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar gulp = require('gulp');\n\nvar babel = require('gulp-babel');\n\nvar gutil = require('gulp-util');\n\nvar del = require('del');\n\nvar Cache = require('gulp-file-cache');\n\nvar cache = new Cache();\nvar SRC = {\n  API: 'api-dev/**/*.js'\n};\nvar DEST = {\n  API: 'api/controllers'\n};\ngulp.task('api', function () {\n  return gulp.src(SRC.API).pipe(cache.filter()).pipe(babel({\n    presets: ['@babel/preset-env']\n  })).pipe(cache.cache()).pipe(gulp.dest(DEST.API));\n});\ngulp.task('clean', function () {\n  return del([DEST.API]).then(function (paths) {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\ngulp.task('watch', function () {\n  var watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  var notify = function notify(event) {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for (var key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\nvar tasks = ['api'];\ngulp.task('default', gulp.series(tasks), function () {\n  return gutil.log('Gulp is running');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWwiLCJndXRpbCIsImRlbCIsIkNhY2hlIiwiY2FjaGUiLCJTUkMiLCJBUEkiLCJERVNUIiwidGFzayIsInNyYyIsInBpcGUiLCJmaWx0ZXIiLCJwcmVzZXRzIiwiZGVzdCIsInRoZW4iLCJwYXRocyIsImNvbnNvbGUiLCJsb2ciLCJqb2luIiwid2F0Y2hlciIsImFwaSIsIndhdGNoIiwibm90aWZ5IiwiZXZlbnQiLCJjb2xvcnMiLCJ5ZWxsb3ciLCJwYXRoIiwibWFnZW50YSIsInR5cGUiLCJrZXkiLCJvbiIsInRhc2tzIiwic2VyaWVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUFyQjs7QUFDQSxJQUFNRyxHQUFHLEdBQUdILE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUVBLElBQU1JLEtBQUssR0FBR0osT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUNBLElBQUlLLEtBQUssR0FBRyxJQUFJRCxLQUFKLEVBQVo7QUFFQSxJQUFNRSxHQUFHLEdBQUc7QUFDVkMsRUFBQUEsR0FBRyxFQUFFO0FBREssQ0FBWjtBQUlBLElBQU1DLElBQUksR0FBRztBQUNYRCxFQUFBQSxHQUFHLEVBQUU7QUFETSxDQUFiO0FBSUFSLElBQUksQ0FBQ1UsSUFBTCxDQUFVLEtBQVYsRUFBaUIsWUFBTTtBQUNyQixTQUFPVixJQUFJLENBQUNXLEdBQUwsQ0FBU0osR0FBRyxDQUFDQyxHQUFiLEVBQ0pJLElBREksQ0FDQ04sS0FBSyxDQUFDTyxNQUFOLEVBREQsRUFFSkQsSUFGSSxDQUVDVixLQUFLLENBQUM7QUFDVlksSUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFEQyxHQUFELENBRk4sRUFLSkYsSUFMSSxDQUtDTixLQUFLLENBQUNBLEtBQU4sRUFMRCxFQU1KTSxJQU5JLENBTUNaLElBQUksQ0FBQ2UsSUFBTCxDQUFVTixJQUFJLENBQUNELEdBQWYsQ0FORCxDQUFQO0FBT0QsQ0FSRDtBQVdBUixJQUFJLENBQUNVLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDdkIsU0FBT04sR0FBRyxDQUFDLENBQUNLLElBQUksQ0FBQ0QsR0FBTixDQUFELENBQUgsQ0FBZ0JRLElBQWhCLENBQXFCLFVBQUFDLEtBQUssRUFBSTtBQUNuQ0MsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksOEJBQVosRUFBNENGLEtBQUssQ0FBQ0csSUFBTixDQUFXLElBQVgsQ0FBNUM7QUFDRCxHQUZNLENBQVA7QUFHRCxDQUpEO0FBT0FwQixJQUFJLENBQUNVLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDdkIsTUFBSVcsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLEdBQUcsRUFBRXRCLElBQUksQ0FBQ3VCLEtBQUwsQ0FBV2hCLEdBQUcsQ0FBQ0MsR0FBZixFQUFvQixDQUFDLEtBQUQsQ0FBcEI7QUFETyxHQUFkOztBQUlBLE1BQUlnQixNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDQyxLQUFELEVBQVc7QUFDdEJ0QixJQUFBQSxLQUFLLENBQUNnQixHQUFOLENBQVUsTUFBVixFQUFrQmhCLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYUMsTUFBYixDQUFvQkYsS0FBSyxDQUFDRyxJQUExQixDQUFsQixFQUFtRCxLQUFuRCxFQUEwRHpCLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYUcsT0FBYixDQUFxQkosS0FBSyxDQUFDSyxJQUEzQixDQUExRDtBQUNELEdBRkQ7O0FBSUEsT0FBSSxJQUFJQyxHQUFSLElBQWVWLE9BQWYsRUFBd0I7QUFDdEJBLElBQUFBLE9BQU8sQ0FBQ1UsR0FBRCxDQUFQLENBQWFDLEVBQWIsQ0FBZ0IsUUFBaEIsRUFBMEJSLE1BQTFCO0FBQ0Q7QUFDRixDQVpEO0FBY0EsSUFBSVMsS0FBSyxHQUFJLENBQUUsS0FBRixDQUFiO0FBQ0FqQyxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLEVBQXFCVixJQUFJLENBQUNrQyxNQUFMLENBQVlELEtBQVosQ0FBckIsRUFBeUMsWUFBTTtBQUM3QyxTQUFPOUIsS0FBSyxDQUFDZ0IsR0FBTixDQUFVLGlCQUFWLENBQVA7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qZW9uZ2NoZW9sa2ltL3Byb2plY3QvaXJvbmxlZnQvcG9rZXItYXBpIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBndWxwID0gcmVxdWlyZSgnZ3VscCcpO1xuY29uc3QgYmFiZWwgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG5jb25zdCBndXRpbCA9IHJlcXVpcmUoJ2d1bHAtdXRpbCcpO1xuY29uc3QgZGVsID0gcmVxdWlyZSgnZGVsJyk7XG5cbmNvbnN0IENhY2hlID0gcmVxdWlyZSgnZ3VscC1maWxlLWNhY2hlJyk7XG5sZXQgY2FjaGUgPSBuZXcgQ2FjaGUoKTtcblxuY29uc3QgU1JDID0ge1xuICBBUEk6ICdhcGktZGV2LyoqLyouanMnXG59O1xuXG5jb25zdCBERVNUID0ge1xuICBBUEk6ICdhcGkvY29udHJvbGxlcnMnXG59O1xuXG5ndWxwLnRhc2soJ2FwaScsICgpID0+IHtcbiAgcmV0dXJuIGd1bHAuc3JjKFNSQy5BUEkpXG4gICAgLnBpcGUoY2FjaGUuZmlsdGVyKCkpXG4gICAgLnBpcGUoYmFiZWwoe1xuICAgICAgcHJlc2V0czogWydAYmFiZWwvcHJlc2V0LWVudiddXG4gICAgfSkpXG4gICAgLnBpcGUoY2FjaGUuY2FjaGUoKSlcbiAgICAucGlwZShndWxwLmRlc3QoREVTVC5BUEkpKTtcbn0pO1xuXG5cbmd1bHAudGFzaygnY2xlYW4nLCAoKSA9PiB7XG4gIHJldHVybiBkZWwoW0RFU1QuQVBJXSkudGhlbihwYXRocyA9PiB7XG4gICAgY29uc29sZS5sb2coJ0RlbGV0ZWQgZmlsZXMgYW5kIGZvbGRlcnM6XFxuJywgcGF0aHMuam9pbignXFxuJykpO1xuICB9KTtcbn0pO1xuXG5cbmd1bHAudGFzaygnd2F0Y2gnLCAoKSA9PiB7XG4gIGxldCB3YXRjaGVyID0ge1xuICAgIGFwaTogZ3VscC53YXRjaChTUkMuQVBJLCBbJ2FwaSddKVxuICB9O1xuXG4gIGxldCBub3RpZnkgPSAoZXZlbnQpID0+IHtcbiAgICBndXRpbC5sb2coJ0ZpbGUnLCBndXRpbC5jb2xvcnMueWVsbG93KGV2ZW50LnBhdGgpLCAnd2FzJywgZ3V0aWwuY29sb3JzLm1hZ2VudGEoZXZlbnQudHlwZSkpO1xuICB9O1xuXG4gIGZvcihsZXQga2V5IGluIHdhdGNoZXIpIHtcbiAgICB3YXRjaGVyW2tleV0ub24oJ2NoYW5nZScsIG5vdGlmeSk7XG4gIH1cbn0pO1xuXG5sZXQgdGFza3MgPSAgWyAnYXBpJ107XG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndWxwLnNlcmllcyh0YXNrcyksICgpID0+IHtcbiAgcmV0dXJuIGd1dGlsLmxvZygnR3VscCBpcyBydW5uaW5nJyk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babel",
        "gutil",
        "del",
        "Cache",
        "cache",
        "SRC",
        "API",
        "DEST",
        "task",
        "src",
        "pipe",
        "filter",
        "presets",
        "dest",
        "then",
        "paths",
        "console",
        "log",
        "join",
        "watcher",
        "api",
        "watch",
        "notify",
        "event",
        "colors",
        "yellow",
        "path",
        "magenta",
        "type",
        "key",
        "on",
        "tasks",
        "series"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIK,KAAK,GAAG,IAAID,KAAJ,EAAZ;AAEA,IAAME,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE;AADK,CAAZ;AAIA,IAAMC,IAAI,GAAG;AACXD,EAAAA,GAAG,EAAE;AADM,CAAb;AAIAR,IAAI,CAACU,IAAL,CAAU,KAAV,EAAiB,YAAM;AACrB,SAAOV,IAAI,CAACW,GAAL,CAASJ,GAAG,CAACC,GAAb,EACJI,IADI,CACCN,KAAK,CAACO,MAAN,EADD,EAEJD,IAFI,CAECV,KAAK,CAAC;AACVY,IAAAA,OAAO,EAAE,CAAC,mBAAD;AADC,GAAD,CAFN,EAKJF,IALI,CAKCN,KAAK,CAACA,KAAN,EALD,EAMJM,IANI,CAMCZ,IAAI,CAACe,IAAL,CAAUN,IAAI,CAACD,GAAf,CAND,CAAP;AAOD,CARD;AAWAR,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,SAAON,GAAG,CAAC,CAACK,IAAI,CAACD,GAAN,CAAD,CAAH,CAAgBQ,IAAhB,CAAqB,UAAAC,KAAK,EAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAAK,CAACG,IAAN,CAAW,IAAX,CAA5C;AACD,GAFM,CAAP;AAGD,CAJD;AAOApB,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,MAAIW,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAEtB,IAAI,CAACuB,KAAL,CAAWhB,GAAG,CAACC,GAAf,EAAoB,CAAC,KAAD,CAApB;AADO,GAAd;;AAIA,MAAIgB,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBtB,IAAAA,KAAK,CAACgB,GAAN,CAAU,MAAV,EAAkBhB,KAAK,CAACuB,MAAN,CAAaC,MAAb,CAAoBF,KAAK,CAACG,IAA1B,CAAlB,EAAmD,KAAnD,EAA0DzB,KAAK,CAACuB,MAAN,CAAaG,OAAb,CAAqBJ,KAAK,CAACK,IAA3B,CAA1D;AACD,GAFD;;AAIA,OAAI,IAAIC,GAAR,IAAeV,OAAf,EAAwB;AACtBA,IAAAA,OAAO,CAACU,GAAD,CAAP,CAAaC,EAAb,CAAgB,QAAhB,EAA0BR,MAA1B;AACD;AACF,CAZD;AAcA,IAAIS,KAAK,GAAI,CAAE,KAAF,CAAb;AACAjC,IAAI,CAACU,IAAL,CAAU,SAAV,EAAqBV,IAAI,CAACkC,MAAL,CAAYD,KAAZ,CAArB,EAAyC,YAAM;AAC7C,SAAO9B,KAAK,CAACgB,GAAN,CAAU,iBAAV,CAAP;AACD,CAFD",
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourcesContent": [
        "'use strict';\n\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst gutil = require('gulp-util');\nconst del = require('del');\n\nconst Cache = require('gulp-file-cache');\nlet cache = new Cache();\n\nconst SRC = {\n  API: 'api-dev/**/*.js'\n};\n\nconst DEST = {\n  API: 'api/controllers'\n};\n\ngulp.task('api', () => {\n  return gulp.src(SRC.API)\n    .pipe(cache.filter())\n    .pipe(babel({\n      presets: ['@babel/preset-env']\n    }))\n    .pipe(cache.cache())\n    .pipe(gulp.dest(DEST.API));\n});\n\n\ngulp.task('clean', () => {\n  return del([DEST.API]).then(paths => {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\n\n\ngulp.task('watch', () => {\n  let watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  let notify = (event) => {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for(let key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\n\nlet tasks =  [ 'api'];\ngulp.task('default', gulp.series(tasks), () => {\n  return gutil.log('Gulp is running');\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564532163449
  },
  "{\"sourceRoot\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"filename\":\"/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}},{\"key\":\"regenerator-usage\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        },
        {
          "key": "regenerator-usage",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {},
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nimport \"core-js/modules/es6.array.filter\";\n\nvar gulp = require('gulp');\n\nvar babel = require('gulp-babel');\n\nvar gutil = require('gulp-util');\n\nvar del = require('del');\n\nvar Cache = require('gulp-file-cache');\n\nvar cache = new Cache();\nvar SRC = {\n  API: 'api-dev/**/*.js'\n};\nvar DEST = {\n  API: 'api/controllers'\n};\ngulp.task('api', function () {\n  return gulp.src(SRC.API).pipe(cache.filter()).pipe(babel({\n    presets: ['@babel/preset-env']\n  })).pipe(cache.cache()).pipe(gulp.dest(DEST.API));\n});\ngulp.task('clean', function () {\n  return del([DEST.API]).then(function (paths) {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\ngulp.task('watch', function () {\n  var watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  var notify = function notify(event) {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for (var key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\nvar tasks = ['api'];\ngulp.task('default', gulp.series(tasks), function () {\n  return gutil.log('Gulp is running');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWwiLCJndXRpbCIsImRlbCIsIkNhY2hlIiwiY2FjaGUiLCJTUkMiLCJBUEkiLCJERVNUIiwidGFzayIsInNyYyIsInBpcGUiLCJmaWx0ZXIiLCJwcmVzZXRzIiwiZGVzdCIsInRoZW4iLCJwYXRocyIsImNvbnNvbGUiLCJsb2ciLCJqb2luIiwid2F0Y2hlciIsImFwaSIsIndhdGNoIiwibm90aWZ5IiwiZXZlbnQiLCJjb2xvcnMiLCJ5ZWxsb3ciLCJwYXRoIiwibWFnZW50YSIsInR5cGUiLCJrZXkiLCJvbiIsInRhc2tzIiwic2VyaWVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsWUFBRCxDQUFyQjs7QUFDQSxJQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXJCOztBQUNBLElBQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLEtBQUQsQ0FBbkI7O0FBRUEsSUFBTUksS0FBSyxHQUFHSixPQUFPLENBQUMsaUJBQUQsQ0FBckI7O0FBQ0EsSUFBSUssS0FBSyxHQUFHLElBQUlELEtBQUosRUFBWjtBQUVBLElBQU1FLEdBQUcsR0FBRztBQUNWQyxFQUFBQSxHQUFHLEVBQUU7QUFESyxDQUFaO0FBSUEsSUFBTUMsSUFBSSxHQUFHO0FBQ1hELEVBQUFBLEdBQUcsRUFBRTtBQURNLENBQWI7QUFJQVIsSUFBSSxDQUFDVSxJQUFMLENBQVUsS0FBVixFQUFpQixZQUFNO0FBQ3JCLFNBQU9WLElBQUksQ0FBQ1csR0FBTCxDQUFTSixHQUFHLENBQUNDLEdBQWIsRUFDSkksSUFESSxDQUNDTixLQUFLLENBQUNPLE1BQU4sRUFERCxFQUVKRCxJQUZJLENBRUNWLEtBQUssQ0FBQztBQUNWWSxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxtQkFBRDtBQURDLEdBQUQsQ0FGTixFQUtKRixJQUxJLENBS0NOLEtBQUssQ0FBQ0EsS0FBTixFQUxELEVBTUpNLElBTkksQ0FNQ1osSUFBSSxDQUFDZSxJQUFMLENBQVVOLElBQUksQ0FBQ0QsR0FBZixDQU5ELENBQVA7QUFPRCxDQVJEO0FBV0FSLElBQUksQ0FBQ1UsSUFBTCxDQUFVLE9BQVYsRUFBbUIsWUFBTTtBQUN2QixTQUFPTixHQUFHLENBQUMsQ0FBQ0ssSUFBSSxDQUFDRCxHQUFOLENBQUQsQ0FBSCxDQUFnQlEsSUFBaEIsQ0FBcUIsVUFBQUMsS0FBSyxFQUFJO0FBQ25DQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw4QkFBWixFQUE0Q0YsS0FBSyxDQUFDRyxJQUFOLENBQVcsSUFBWCxDQUE1QztBQUNELEdBRk0sQ0FBUDtBQUdELENBSkQ7QUFPQXBCLElBQUksQ0FBQ1UsSUFBTCxDQUFVLE9BQVYsRUFBbUIsWUFBTTtBQUN2QixNQUFJVyxPQUFPLEdBQUc7QUFDWkMsSUFBQUEsR0FBRyxFQUFFdEIsSUFBSSxDQUFDdUIsS0FBTCxDQUFXaEIsR0FBRyxDQUFDQyxHQUFmLEVBQW9CLENBQUMsS0FBRCxDQUFwQjtBQURPLEdBQWQ7O0FBSUEsTUFBSWdCLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUNDLEtBQUQsRUFBVztBQUN0QnRCLElBQUFBLEtBQUssQ0FBQ2dCLEdBQU4sQ0FBVSxNQUFWLEVBQWtCaEIsS0FBSyxDQUFDdUIsTUFBTixDQUFhQyxNQUFiLENBQW9CRixLQUFLLENBQUNHLElBQTFCLENBQWxCLEVBQW1ELEtBQW5ELEVBQTBEekIsS0FBSyxDQUFDdUIsTUFBTixDQUFhRyxPQUFiLENBQXFCSixLQUFLLENBQUNLLElBQTNCLENBQTFEO0FBQ0QsR0FGRDs7QUFJQSxPQUFJLElBQUlDLEdBQVIsSUFBZVYsT0FBZixFQUF3QjtBQUN0QkEsSUFBQUEsT0FBTyxDQUFDVSxHQUFELENBQVAsQ0FBYUMsRUFBYixDQUFnQixRQUFoQixFQUEwQlIsTUFBMUI7QUFDRDtBQUNGLENBWkQ7QUFjQSxJQUFJUyxLQUFLLEdBQUksQ0FBRSxLQUFGLENBQWI7QUFDQWpDLElBQUksQ0FBQ1UsSUFBTCxDQUFVLFNBQVYsRUFBcUJWLElBQUksQ0FBQ2tDLE1BQUwsQ0FBWUQsS0FBWixDQUFyQixFQUF5QyxZQUFNO0FBQzdDLFNBQU85QixLQUFLLENBQUNnQixHQUFOLENBQVUsaUJBQVYsQ0FBUDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2plb25nY2hlb2xraW0vcHJvamVjdC9pcm9ubGVmdC9wb2tlci1hcGkiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGd1bHAgPSByZXF1aXJlKCdndWxwJyk7XG5jb25zdCBiYWJlbCA9IHJlcXVpcmUoJ2d1bHAtYmFiZWwnKTtcbmNvbnN0IGd1dGlsID0gcmVxdWlyZSgnZ3VscC11dGlsJyk7XG5jb25zdCBkZWwgPSByZXF1aXJlKCdkZWwnKTtcblxuY29uc3QgQ2FjaGUgPSByZXF1aXJlKCdndWxwLWZpbGUtY2FjaGUnKTtcbmxldCBjYWNoZSA9IG5ldyBDYWNoZSgpO1xuXG5jb25zdCBTUkMgPSB7XG4gIEFQSTogJ2FwaS1kZXYvKiovKi5qcydcbn07XG5cbmNvbnN0IERFU1QgPSB7XG4gIEFQSTogJ2FwaS9jb250cm9sbGVycydcbn07XG5cbmd1bHAudGFzaygnYXBpJywgKCkgPT4ge1xuICByZXR1cm4gZ3VscC5zcmMoU1JDLkFQSSlcbiAgICAucGlwZShjYWNoZS5maWx0ZXIoKSlcbiAgICAucGlwZShiYWJlbCh7XG4gICAgICBwcmVzZXRzOiBbJ0BiYWJlbC9wcmVzZXQtZW52J11cbiAgICB9KSlcbiAgICAucGlwZShjYWNoZS5jYWNoZSgpKVxuICAgIC5waXBlKGd1bHAuZGVzdChERVNULkFQSSkpO1xufSk7XG5cblxuZ3VscC50YXNrKCdjbGVhbicsICgpID0+IHtcbiAgcmV0dXJuIGRlbChbREVTVC5BUEldKS50aGVuKHBhdGhzID0+IHtcbiAgICBjb25zb2xlLmxvZygnRGVsZXRlZCBmaWxlcyBhbmQgZm9sZGVyczpcXG4nLCBwYXRocy5qb2luKCdcXG4nKSk7XG4gIH0pO1xufSk7XG5cblxuZ3VscC50YXNrKCd3YXRjaCcsICgpID0+IHtcbiAgbGV0IHdhdGNoZXIgPSB7XG4gICAgYXBpOiBndWxwLndhdGNoKFNSQy5BUEksIFsnYXBpJ10pXG4gIH07XG5cbiAgbGV0IG5vdGlmeSA9IChldmVudCkgPT4ge1xuICAgIGd1dGlsLmxvZygnRmlsZScsIGd1dGlsLmNvbG9ycy55ZWxsb3coZXZlbnQucGF0aCksICd3YXMnLCBndXRpbC5jb2xvcnMubWFnZW50YShldmVudC50eXBlKSk7XG4gIH07XG5cbiAgZm9yKGxldCBrZXkgaW4gd2F0Y2hlcikge1xuICAgIHdhdGNoZXJba2V5XS5vbignY2hhbmdlJywgbm90aWZ5KTtcbiAgfVxufSk7XG5cbmxldCB0YXNrcyA9ICBbICdhcGknXTtcbmd1bHAudGFzaygnZGVmYXVsdCcsIGd1bHAuc2VyaWVzKHRhc2tzKSwgKCkgPT4ge1xuICByZXR1cm4gZ3V0aWwubG9nKCdHdWxwIGlzIHJ1bm5pbmcnKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babel",
        "gutil",
        "del",
        "Cache",
        "cache",
        "SRC",
        "API",
        "DEST",
        "task",
        "src",
        "pipe",
        "filter",
        "presets",
        "dest",
        "then",
        "paths",
        "console",
        "log",
        "join",
        "watcher",
        "api",
        "watch",
        "notify",
        "event",
        "colors",
        "yellow",
        "path",
        "magenta",
        "type",
        "key",
        "on",
        "tasks",
        "series"
      ],
      "mappings": "AAAA;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIK,KAAK,GAAG,IAAID,KAAJ,EAAZ;AAEA,IAAME,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE;AADK,CAAZ;AAIA,IAAMC,IAAI,GAAG;AACXD,EAAAA,GAAG,EAAE;AADM,CAAb;AAIAR,IAAI,CAACU,IAAL,CAAU,KAAV,EAAiB,YAAM;AACrB,SAAOV,IAAI,CAACW,GAAL,CAASJ,GAAG,CAACC,GAAb,EACJI,IADI,CACCN,KAAK,CAACO,MAAN,EADD,EAEJD,IAFI,CAECV,KAAK,CAAC;AACVY,IAAAA,OAAO,EAAE,CAAC,mBAAD;AADC,GAAD,CAFN,EAKJF,IALI,CAKCN,KAAK,CAACA,KAAN,EALD,EAMJM,IANI,CAMCZ,IAAI,CAACe,IAAL,CAAUN,IAAI,CAACD,GAAf,CAND,CAAP;AAOD,CARD;AAWAR,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,SAAON,GAAG,CAAC,CAACK,IAAI,CAACD,GAAN,CAAD,CAAH,CAAgBQ,IAAhB,CAAqB,UAAAC,KAAK,EAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAAK,CAACG,IAAN,CAAW,IAAX,CAA5C;AACD,GAFM,CAAP;AAGD,CAJD;AAOApB,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,MAAIW,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAEtB,IAAI,CAACuB,KAAL,CAAWhB,GAAG,CAACC,GAAf,EAAoB,CAAC,KAAD,CAApB;AADO,GAAd;;AAIA,MAAIgB,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBtB,IAAAA,KAAK,CAACgB,GAAN,CAAU,MAAV,EAAkBhB,KAAK,CAACuB,MAAN,CAAaC,MAAb,CAAoBF,KAAK,CAACG,IAA1B,CAAlB,EAAmD,KAAnD,EAA0DzB,KAAK,CAACuB,MAAN,CAAaG,OAAb,CAAqBJ,KAAK,CAACK,IAA3B,CAA1D;AACD,GAFD;;AAIA,OAAI,IAAIC,GAAR,IAAeV,OAAf,EAAwB;AACtBA,IAAAA,OAAO,CAACU,GAAD,CAAP,CAAaC,EAAb,CAAgB,QAAhB,EAA0BR,MAA1B;AACD;AACF,CAZD;AAcA,IAAIS,KAAK,GAAI,CAAE,KAAF,CAAb;AACAjC,IAAI,CAACU,IAAL,CAAU,SAAV,EAAqBV,IAAI,CAACkC,MAAL,CAAYD,KAAZ,CAArB,EAAyC,YAAM;AAC7C,SAAO9B,KAAK,CAACgB,GAAN,CAAU,iBAAV,CAAP;AACD,CAFD",
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourcesContent": [
        "'use strict';\n\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst gutil = require('gulp-util');\nconst del = require('del');\n\nconst Cache = require('gulp-file-cache');\nlet cache = new Cache();\n\nconst SRC = {\n  API: 'api-dev/**/*.js'\n};\n\nconst DEST = {\n  API: 'api/controllers'\n};\n\ngulp.task('api', () => {\n  return gulp.src(SRC.API)\n    .pipe(cache.filter())\n    .pipe(babel({\n      presets: ['@babel/preset-env']\n    }))\n    .pipe(cache.cache())\n    .pipe(gulp.dest(DEST.API));\n});\n\n\ngulp.task('clean', () => {\n  return del([DEST.API]).then(paths => {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\n\n\ngulp.task('watch', () => {\n  let watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  let notify = (event) => {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for(let key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\n\nlet tasks =  [ 'api'];\ngulp.task('default', gulp.series(tasks), () => {\n  return gutil.log('Gulp is running');\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1564532163449
  },
  "{\"sourceRoot\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"filename\":\"/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"ie\":\"11.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}},{\"key\":\"regenerator-usage\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"ie\":\"11.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "ie": "11.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        },
        {
          "key": "regenerator-usage",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "ie": "11.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar gulp = require('gulp');\n\nvar babel = require('gulp-babel');\n\nvar gutil = require('gulp-util');\n\nvar del = require('del');\n\nvar Cache = require('gulp-file-cache');\n\nvar cache = new Cache();\nvar SRC = {\n  API: 'api-dev/**/*.js'\n};\nvar DEST = {\n  API: 'api/controllers'\n};\ngulp.task('api', function () {\n  return gulp.src(SRC.API).pipe(cache.filter()).pipe(babel({\n    presets: ['@babel/preset-env']\n  })).pipe(cache.cache()).pipe(gulp.dest(DEST.API));\n});\ngulp.task('clean', function () {\n  return del([DEST.API]).then(function (paths) {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\ngulp.task('watch', function () {\n  var watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  var notify = function notify(event) {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for (var key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\nvar tasks = ['api'];\ngulp.task('default', gulp.series(tasks), function () {\n  return gutil.log('Gulp is running');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWwiLCJndXRpbCIsImRlbCIsIkNhY2hlIiwiY2FjaGUiLCJTUkMiLCJBUEkiLCJERVNUIiwidGFzayIsInNyYyIsInBpcGUiLCJmaWx0ZXIiLCJwcmVzZXRzIiwiZGVzdCIsInRoZW4iLCJwYXRocyIsImNvbnNvbGUiLCJsb2ciLCJqb2luIiwid2F0Y2hlciIsImFwaSIsIndhdGNoIiwibm90aWZ5IiwiZXZlbnQiLCJjb2xvcnMiLCJ5ZWxsb3ciLCJwYXRoIiwibWFnZW50YSIsInR5cGUiLCJrZXkiLCJvbiIsInRhc2tzIiwic2VyaWVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUFyQjs7QUFDQSxJQUFNRyxHQUFHLEdBQUdILE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUVBLElBQU1JLEtBQUssR0FBR0osT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUNBLElBQUlLLEtBQUssR0FBRyxJQUFJRCxLQUFKLEVBQVo7QUFFQSxJQUFNRSxHQUFHLEdBQUc7QUFDVkMsRUFBQUEsR0FBRyxFQUFFO0FBREssQ0FBWjtBQUlBLElBQU1DLElBQUksR0FBRztBQUNYRCxFQUFBQSxHQUFHLEVBQUU7QUFETSxDQUFiO0FBSUFSLElBQUksQ0FBQ1UsSUFBTCxDQUFVLEtBQVYsRUFBaUIsWUFBTTtBQUNyQixTQUFPVixJQUFJLENBQUNXLEdBQUwsQ0FBU0osR0FBRyxDQUFDQyxHQUFiLEVBQ0pJLElBREksQ0FDQ04sS0FBSyxDQUFDTyxNQUFOLEVBREQsRUFFSkQsSUFGSSxDQUVDVixLQUFLLENBQUM7QUFDVlksSUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFEQyxHQUFELENBRk4sRUFLSkYsSUFMSSxDQUtDTixLQUFLLENBQUNBLEtBQU4sRUFMRCxFQU1KTSxJQU5JLENBTUNaLElBQUksQ0FBQ2UsSUFBTCxDQUFVTixJQUFJLENBQUNELEdBQWYsQ0FORCxDQUFQO0FBT0QsQ0FSRDtBQVdBUixJQUFJLENBQUNVLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDdkIsU0FBT04sR0FBRyxDQUFDLENBQUNLLElBQUksQ0FBQ0QsR0FBTixDQUFELENBQUgsQ0FBZ0JRLElBQWhCLENBQXFCLFVBQUFDLEtBQUssRUFBSTtBQUNuQ0MsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksOEJBQVosRUFBNENGLEtBQUssQ0FBQ0csSUFBTixDQUFXLElBQVgsQ0FBNUM7QUFDRCxHQUZNLENBQVA7QUFHRCxDQUpEO0FBT0FwQixJQUFJLENBQUNVLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDdkIsTUFBSVcsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLEdBQUcsRUFBRXRCLElBQUksQ0FBQ3VCLEtBQUwsQ0FBV2hCLEdBQUcsQ0FBQ0MsR0FBZixFQUFvQixDQUFDLEtBQUQsQ0FBcEI7QUFETyxHQUFkOztBQUlBLE1BQUlnQixNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDQyxLQUFELEVBQVc7QUFDdEJ0QixJQUFBQSxLQUFLLENBQUNnQixHQUFOLENBQVUsTUFBVixFQUFrQmhCLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYUMsTUFBYixDQUFvQkYsS0FBSyxDQUFDRyxJQUExQixDQUFsQixFQUFtRCxLQUFuRCxFQUEwRHpCLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYUcsT0FBYixDQUFxQkosS0FBSyxDQUFDSyxJQUEzQixDQUExRDtBQUNELEdBRkQ7O0FBSUEsT0FBSSxJQUFJQyxHQUFSLElBQWVWLE9BQWYsRUFBd0I7QUFDdEJBLElBQUFBLE9BQU8sQ0FBQ1UsR0FBRCxDQUFQLENBQWFDLEVBQWIsQ0FBZ0IsUUFBaEIsRUFBMEJSLE1BQTFCO0FBQ0Q7QUFDRixDQVpEO0FBY0EsSUFBSVMsS0FBSyxHQUFJLENBQUUsS0FBRixDQUFiO0FBQ0FqQyxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLEVBQXFCVixJQUFJLENBQUNrQyxNQUFMLENBQVlELEtBQVosQ0FBckIsRUFBeUMsWUFBTTtBQUM3QyxTQUFPOUIsS0FBSyxDQUFDZ0IsR0FBTixDQUFVLGlCQUFWLENBQVA7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qZW9uZ2NoZW9sa2ltL3Byb2plY3QvaXJvbmxlZnQvcG9rZXItYXBpIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBndWxwID0gcmVxdWlyZSgnZ3VscCcpO1xuY29uc3QgYmFiZWwgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG5jb25zdCBndXRpbCA9IHJlcXVpcmUoJ2d1bHAtdXRpbCcpO1xuY29uc3QgZGVsID0gcmVxdWlyZSgnZGVsJyk7XG5cbmNvbnN0IENhY2hlID0gcmVxdWlyZSgnZ3VscC1maWxlLWNhY2hlJyk7XG5sZXQgY2FjaGUgPSBuZXcgQ2FjaGUoKTtcblxuY29uc3QgU1JDID0ge1xuICBBUEk6ICdhcGktZGV2LyoqLyouanMnXG59O1xuXG5jb25zdCBERVNUID0ge1xuICBBUEk6ICdhcGkvY29udHJvbGxlcnMnXG59O1xuXG5ndWxwLnRhc2soJ2FwaScsICgpID0+IHtcbiAgcmV0dXJuIGd1bHAuc3JjKFNSQy5BUEkpXG4gICAgLnBpcGUoY2FjaGUuZmlsdGVyKCkpXG4gICAgLnBpcGUoYmFiZWwoe1xuICAgICAgcHJlc2V0czogWydAYmFiZWwvcHJlc2V0LWVudiddXG4gICAgfSkpXG4gICAgLnBpcGUoY2FjaGUuY2FjaGUoKSlcbiAgICAucGlwZShndWxwLmRlc3QoREVTVC5BUEkpKTtcbn0pO1xuXG5cbmd1bHAudGFzaygnY2xlYW4nLCAoKSA9PiB7XG4gIHJldHVybiBkZWwoW0RFU1QuQVBJXSkudGhlbihwYXRocyA9PiB7XG4gICAgY29uc29sZS5sb2coJ0RlbGV0ZWQgZmlsZXMgYW5kIGZvbGRlcnM6XFxuJywgcGF0aHMuam9pbignXFxuJykpO1xuICB9KTtcbn0pO1xuXG5cbmd1bHAudGFzaygnd2F0Y2gnLCAoKSA9PiB7XG4gIGxldCB3YXRjaGVyID0ge1xuICAgIGFwaTogZ3VscC53YXRjaChTUkMuQVBJLCBbJ2FwaSddKVxuICB9O1xuXG4gIGxldCBub3RpZnkgPSAoZXZlbnQpID0+IHtcbiAgICBndXRpbC5sb2coJ0ZpbGUnLCBndXRpbC5jb2xvcnMueWVsbG93KGV2ZW50LnBhdGgpLCAnd2FzJywgZ3V0aWwuY29sb3JzLm1hZ2VudGEoZXZlbnQudHlwZSkpO1xuICB9O1xuXG4gIGZvcihsZXQga2V5IGluIHdhdGNoZXIpIHtcbiAgICB3YXRjaGVyW2tleV0ub24oJ2NoYW5nZScsIG5vdGlmeSk7XG4gIH1cbn0pO1xuXG5sZXQgdGFza3MgPSAgWyAnYXBpJ107XG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndWxwLnNlcmllcyh0YXNrcyksICgpID0+IHtcbiAgcmV0dXJuIGd1dGlsLmxvZygnR3VscCBpcyBydW5uaW5nJyk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babel",
        "gutil",
        "del",
        "Cache",
        "cache",
        "SRC",
        "API",
        "DEST",
        "task",
        "src",
        "pipe",
        "filter",
        "presets",
        "dest",
        "then",
        "paths",
        "console",
        "log",
        "join",
        "watcher",
        "api",
        "watch",
        "notify",
        "event",
        "colors",
        "yellow",
        "path",
        "magenta",
        "type",
        "key",
        "on",
        "tasks",
        "series"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIK,KAAK,GAAG,IAAID,KAAJ,EAAZ;AAEA,IAAME,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE;AADK,CAAZ;AAIA,IAAMC,IAAI,GAAG;AACXD,EAAAA,GAAG,EAAE;AADM,CAAb;AAIAR,IAAI,CAACU,IAAL,CAAU,KAAV,EAAiB,YAAM;AACrB,SAAOV,IAAI,CAACW,GAAL,CAASJ,GAAG,CAACC,GAAb,EACJI,IADI,CACCN,KAAK,CAACO,MAAN,EADD,EAEJD,IAFI,CAECV,KAAK,CAAC;AACVY,IAAAA,OAAO,EAAE,CAAC,mBAAD;AADC,GAAD,CAFN,EAKJF,IALI,CAKCN,KAAK,CAACA,KAAN,EALD,EAMJM,IANI,CAMCZ,IAAI,CAACe,IAAL,CAAUN,IAAI,CAACD,GAAf,CAND,CAAP;AAOD,CARD;AAWAR,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,SAAON,GAAG,CAAC,CAACK,IAAI,CAACD,GAAN,CAAD,CAAH,CAAgBQ,IAAhB,CAAqB,UAAAC,KAAK,EAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAAK,CAACG,IAAN,CAAW,IAAX,CAA5C;AACD,GAFM,CAAP;AAGD,CAJD;AAOApB,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,MAAIW,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAEtB,IAAI,CAACuB,KAAL,CAAWhB,GAAG,CAACC,GAAf,EAAoB,CAAC,KAAD,CAApB;AADO,GAAd;;AAIA,MAAIgB,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBtB,IAAAA,KAAK,CAACgB,GAAN,CAAU,MAAV,EAAkBhB,KAAK,CAACuB,MAAN,CAAaC,MAAb,CAAoBF,KAAK,CAACG,IAA1B,CAAlB,EAAmD,KAAnD,EAA0DzB,KAAK,CAACuB,MAAN,CAAaG,OAAb,CAAqBJ,KAAK,CAACK,IAA3B,CAA1D;AACD,GAFD;;AAIA,OAAI,IAAIC,GAAR,IAAeV,OAAf,EAAwB;AACtBA,IAAAA,OAAO,CAACU,GAAD,CAAP,CAAaC,EAAb,CAAgB,QAAhB,EAA0BR,MAA1B;AACD;AACF,CAZD;AAcA,IAAIS,KAAK,GAAI,CAAE,KAAF,CAAb;AACAjC,IAAI,CAACU,IAAL,CAAU,SAAV,EAAqBV,IAAI,CAACkC,MAAL,CAAYD,KAAZ,CAArB,EAAyC,YAAM;AAC7C,SAAO9B,KAAK,CAACgB,GAAN,CAAU,iBAAV,CAAP;AACD,CAFD",
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourcesContent": [
        "'use strict';\n\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst gutil = require('gulp-util');\nconst del = require('del');\n\nconst Cache = require('gulp-file-cache');\nlet cache = new Cache();\n\nconst SRC = {\n  API: 'api-dev/**/*.js'\n};\n\nconst DEST = {\n  API: 'api/controllers'\n};\n\ngulp.task('api', () => {\n  return gulp.src(SRC.API)\n    .pipe(cache.filter())\n    .pipe(babel({\n      presets: ['@babel/preset-env']\n    }))\n    .pipe(cache.cache())\n    .pipe(gulp.dest(DEST.API));\n});\n\n\ngulp.task('clean', () => {\n  return del([DEST.API]).then(paths => {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\n\n\ngulp.task('watch', () => {\n  let watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  let notify = (event) => {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for(let key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\n\nlet tasks =  [ 'api'];\ngulp.task('default', gulp.series(tasks), () => {\n  return gutil.log('Gulp is running');\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564532163449
  },
  "{\"sourceRoot\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"filename\":\"/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jeongcheolkim/project/ironleft/poker-api\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jeongcheolkim/project/ironleft/poker-api/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar gulp = require('gulp');\n\nvar babel = require('gulp-babel');\n\nvar gutil = require('gulp-util');\n\nvar del = require('del');\n\nvar Cache = require('gulp-file-cache');\n\nvar cache = new Cache();\nvar SRC = {\n  API: 'api-dev/**/*.js'\n};\nvar DEST = {\n  API: 'api/controllers'\n};\ngulp.task('api', function () {\n  return gulp.src(SRC.API).pipe(cache.filter()).pipe(babel({\n    presets: ['@babel/preset-env']\n  })).pipe(cache.cache()).pipe(gulp.dest(DEST.API));\n});\ngulp.task('clean', function () {\n  return del([DEST.API]).then(function (paths) {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\ngulp.task('watch', function () {\n  var watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  var notify = function notify(event) {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for (var key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\nvar tasks = ['api'];\ngulp.task('default', gulp.series(tasks), function () {\n  return gutil.log('Gulp is running');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWwiLCJndXRpbCIsImRlbCIsIkNhY2hlIiwiY2FjaGUiLCJTUkMiLCJBUEkiLCJERVNUIiwidGFzayIsInNyYyIsInBpcGUiLCJmaWx0ZXIiLCJwcmVzZXRzIiwiZGVzdCIsInRoZW4iLCJwYXRocyIsImNvbnNvbGUiLCJsb2ciLCJqb2luIiwid2F0Y2hlciIsImFwaSIsIndhdGNoIiwibm90aWZ5IiwiZXZlbnQiLCJjb2xvcnMiLCJ5ZWxsb3ciLCJwYXRoIiwibWFnZW50YSIsInR5cGUiLCJrZXkiLCJvbiIsInRhc2tzIiwic2VyaWVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUFyQjs7QUFDQSxJQUFNRyxHQUFHLEdBQUdILE9BQU8sQ0FBQyxLQUFELENBQW5COztBQUVBLElBQU1JLEtBQUssR0FBR0osT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUNBLElBQUlLLEtBQUssR0FBRyxJQUFJRCxLQUFKLEVBQVo7QUFFQSxJQUFNRSxHQUFHLEdBQUc7QUFDVkMsRUFBQUEsR0FBRyxFQUFFO0FBREssQ0FBWjtBQUlBLElBQU1DLElBQUksR0FBRztBQUNYRCxFQUFBQSxHQUFHLEVBQUU7QUFETSxDQUFiO0FBSUFSLElBQUksQ0FBQ1UsSUFBTCxDQUFVLEtBQVYsRUFBaUIsWUFBTTtBQUNyQixTQUFPVixJQUFJLENBQUNXLEdBQUwsQ0FBU0osR0FBRyxDQUFDQyxHQUFiLEVBQ0pJLElBREksQ0FDQ04sS0FBSyxDQUFDTyxNQUFOLEVBREQsRUFFSkQsSUFGSSxDQUVDVixLQUFLLENBQUM7QUFDVlksSUFBQUEsT0FBTyxFQUFFLENBQUMsbUJBQUQ7QUFEQyxHQUFELENBRk4sRUFLSkYsSUFMSSxDQUtDTixLQUFLLENBQUNBLEtBQU4sRUFMRCxFQU1KTSxJQU5JLENBTUNaLElBQUksQ0FBQ2UsSUFBTCxDQUFVTixJQUFJLENBQUNELEdBQWYsQ0FORCxDQUFQO0FBT0QsQ0FSRDtBQVdBUixJQUFJLENBQUNVLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDdkIsU0FBT04sR0FBRyxDQUFDLENBQUNLLElBQUksQ0FBQ0QsR0FBTixDQUFELENBQUgsQ0FBZ0JRLElBQWhCLENBQXFCLFVBQUFDLEtBQUssRUFBSTtBQUNuQ0MsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksOEJBQVosRUFBNENGLEtBQUssQ0FBQ0csSUFBTixDQUFXLElBQVgsQ0FBNUM7QUFDRCxHQUZNLENBQVA7QUFHRCxDQUpEO0FBT0FwQixJQUFJLENBQUNVLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDdkIsTUFBSVcsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLEdBQUcsRUFBRXRCLElBQUksQ0FBQ3VCLEtBQUwsQ0FBV2hCLEdBQUcsQ0FBQ0MsR0FBZixFQUFvQixDQUFDLEtBQUQsQ0FBcEI7QUFETyxHQUFkOztBQUlBLE1BQUlnQixNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDQyxLQUFELEVBQVc7QUFDdEJ0QixJQUFBQSxLQUFLLENBQUNnQixHQUFOLENBQVUsTUFBVixFQUFrQmhCLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYUMsTUFBYixDQUFvQkYsS0FBSyxDQUFDRyxJQUExQixDQUFsQixFQUFtRCxLQUFuRCxFQUEwRHpCLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYUcsT0FBYixDQUFxQkosS0FBSyxDQUFDSyxJQUEzQixDQUExRDtBQUNELEdBRkQ7O0FBSUEsT0FBSSxJQUFJQyxHQUFSLElBQWVWLE9BQWYsRUFBd0I7QUFDdEJBLElBQUFBLE9BQU8sQ0FBQ1UsR0FBRCxDQUFQLENBQWFDLEVBQWIsQ0FBZ0IsUUFBaEIsRUFBMEJSLE1BQTFCO0FBQ0Q7QUFDRixDQVpEO0FBY0EsSUFBSVMsS0FBSyxHQUFJLENBQUUsS0FBRixDQUFiO0FBQ0FqQyxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLEVBQXFCVixJQUFJLENBQUNrQyxNQUFMLENBQVlELEtBQVosQ0FBckIsRUFBeUMsWUFBTTtBQUM3QyxTQUFPOUIsS0FBSyxDQUFDZ0IsR0FBTixDQUFVLGlCQUFWLENBQVA7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qZW9uZ2NoZW9sa2ltL3Byb2plY3QvaXJvbmxlZnQvcG9rZXItYXBpIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBndWxwID0gcmVxdWlyZSgnZ3VscCcpO1xuY29uc3QgYmFiZWwgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG5jb25zdCBndXRpbCA9IHJlcXVpcmUoJ2d1bHAtdXRpbCcpO1xuY29uc3QgZGVsID0gcmVxdWlyZSgnZGVsJyk7XG5cbmNvbnN0IENhY2hlID0gcmVxdWlyZSgnZ3VscC1maWxlLWNhY2hlJyk7XG5sZXQgY2FjaGUgPSBuZXcgQ2FjaGUoKTtcblxuY29uc3QgU1JDID0ge1xuICBBUEk6ICdhcGktZGV2LyoqLyouanMnXG59O1xuXG5jb25zdCBERVNUID0ge1xuICBBUEk6ICdhcGkvY29udHJvbGxlcnMnXG59O1xuXG5ndWxwLnRhc2soJ2FwaScsICgpID0+IHtcbiAgcmV0dXJuIGd1bHAuc3JjKFNSQy5BUEkpXG4gICAgLnBpcGUoY2FjaGUuZmlsdGVyKCkpXG4gICAgLnBpcGUoYmFiZWwoe1xuICAgICAgcHJlc2V0czogWydAYmFiZWwvcHJlc2V0LWVudiddXG4gICAgfSkpXG4gICAgLnBpcGUoY2FjaGUuY2FjaGUoKSlcbiAgICAucGlwZShndWxwLmRlc3QoREVTVC5BUEkpKTtcbn0pO1xuXG5cbmd1bHAudGFzaygnY2xlYW4nLCAoKSA9PiB7XG4gIHJldHVybiBkZWwoW0RFU1QuQVBJXSkudGhlbihwYXRocyA9PiB7XG4gICAgY29uc29sZS5sb2coJ0RlbGV0ZWQgZmlsZXMgYW5kIGZvbGRlcnM6XFxuJywgcGF0aHMuam9pbignXFxuJykpO1xuICB9KTtcbn0pO1xuXG5cbmd1bHAudGFzaygnd2F0Y2gnLCAoKSA9PiB7XG4gIGxldCB3YXRjaGVyID0ge1xuICAgIGFwaTogZ3VscC53YXRjaChTUkMuQVBJLCBbJ2FwaSddKVxuICB9O1xuXG4gIGxldCBub3RpZnkgPSAoZXZlbnQpID0+IHtcbiAgICBndXRpbC5sb2coJ0ZpbGUnLCBndXRpbC5jb2xvcnMueWVsbG93KGV2ZW50LnBhdGgpLCAnd2FzJywgZ3V0aWwuY29sb3JzLm1hZ2VudGEoZXZlbnQudHlwZSkpO1xuICB9O1xuXG4gIGZvcihsZXQga2V5IGluIHdhdGNoZXIpIHtcbiAgICB3YXRjaGVyW2tleV0ub24oJ2NoYW5nZScsIG5vdGlmeSk7XG4gIH1cbn0pO1xuXG5sZXQgdGFza3MgPSAgWyAnYXBpJ107XG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndWxwLnNlcmllcyh0YXNrcyksICgpID0+IHtcbiAgcmV0dXJuIGd1dGlsLmxvZygnR3VscCBpcyBydW5uaW5nJyk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babel",
        "gutil",
        "del",
        "Cache",
        "cache",
        "SRC",
        "API",
        "DEST",
        "task",
        "src",
        "pipe",
        "filter",
        "presets",
        "dest",
        "then",
        "paths",
        "console",
        "log",
        "join",
        "watcher",
        "api",
        "watch",
        "notify",
        "event",
        "colors",
        "yellow",
        "path",
        "magenta",
        "type",
        "key",
        "on",
        "tasks",
        "series"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIK,KAAK,GAAG,IAAID,KAAJ,EAAZ;AAEA,IAAME,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE;AADK,CAAZ;AAIA,IAAMC,IAAI,GAAG;AACXD,EAAAA,GAAG,EAAE;AADM,CAAb;AAIAR,IAAI,CAACU,IAAL,CAAU,KAAV,EAAiB,YAAM;AACrB,SAAOV,IAAI,CAACW,GAAL,CAASJ,GAAG,CAACC,GAAb,EACJI,IADI,CACCN,KAAK,CAACO,MAAN,EADD,EAEJD,IAFI,CAECV,KAAK,CAAC;AACVY,IAAAA,OAAO,EAAE,CAAC,mBAAD;AADC,GAAD,CAFN,EAKJF,IALI,CAKCN,KAAK,CAACA,KAAN,EALD,EAMJM,IANI,CAMCZ,IAAI,CAACe,IAAL,CAAUN,IAAI,CAACD,GAAf,CAND,CAAP;AAOD,CARD;AAWAR,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,SAAON,GAAG,CAAC,CAACK,IAAI,CAACD,GAAN,CAAD,CAAH,CAAgBQ,IAAhB,CAAqB,UAAAC,KAAK,EAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAAK,CAACG,IAAN,CAAW,IAAX,CAA5C;AACD,GAFM,CAAP;AAGD,CAJD;AAOApB,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,YAAM;AACvB,MAAIW,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAEtB,IAAI,CAACuB,KAAL,CAAWhB,GAAG,CAACC,GAAf,EAAoB,CAAC,KAAD,CAApB;AADO,GAAd;;AAIA,MAAIgB,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBtB,IAAAA,KAAK,CAACgB,GAAN,CAAU,MAAV,EAAkBhB,KAAK,CAACuB,MAAN,CAAaC,MAAb,CAAoBF,KAAK,CAACG,IAA1B,CAAlB,EAAmD,KAAnD,EAA0DzB,KAAK,CAACuB,MAAN,CAAaG,OAAb,CAAqBJ,KAAK,CAACK,IAA3B,CAA1D;AACD,GAFD;;AAIA,OAAI,IAAIC,GAAR,IAAeV,OAAf,EAAwB;AACtBA,IAAAA,OAAO,CAACU,GAAD,CAAP,CAAaC,EAAb,CAAgB,QAAhB,EAA0BR,MAA1B;AACD;AACF,CAZD;AAcA,IAAIS,KAAK,GAAI,CAAE,KAAF,CAAb;AACAjC,IAAI,CAACU,IAAL,CAAU,SAAV,EAAqBV,IAAI,CAACkC,MAAL,CAAYD,KAAZ,CAArB,EAAyC,YAAM;AAC7C,SAAO9B,KAAK,CAACgB,GAAN,CAAU,iBAAV,CAAP;AACD,CAFD",
      "sourceRoot": "/Users/jeongcheolkim/project/ironleft/poker-api",
      "sourcesContent": [
        "'use strict';\n\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst gutil = require('gulp-util');\nconst del = require('del');\n\nconst Cache = require('gulp-file-cache');\nlet cache = new Cache();\n\nconst SRC = {\n  API: 'api-dev/**/*.js'\n};\n\nconst DEST = {\n  API: 'api/controllers'\n};\n\ngulp.task('api', () => {\n  return gulp.src(SRC.API)\n    .pipe(cache.filter())\n    .pipe(babel({\n      presets: ['@babel/preset-env']\n    }))\n    .pipe(cache.cache())\n    .pipe(gulp.dest(DEST.API));\n});\n\n\ngulp.task('clean', () => {\n  return del([DEST.API]).then(paths => {\n    console.log('Deleted files and folders:\\n', paths.join('\\n'));\n  });\n});\n\n\ngulp.task('watch', () => {\n  let watcher = {\n    api: gulp.watch(SRC.API, ['api'])\n  };\n\n  let notify = (event) => {\n    gutil.log('File', gutil.colors.yellow(event.path), 'was', gutil.colors.magenta(event.type));\n  };\n\n  for(let key in watcher) {\n    watcher[key].on('change', notify);\n  }\n});\n\nlet tasks =  [ 'api'];\ngulp.task('default', gulp.series(tasks), () => {\n  return gutil.log('Gulp is running');\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1566951844972
  }
}